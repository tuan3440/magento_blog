<?php

namespace Hust\Service\Block\Adminhtml\Booking\Edit\Tab;

use Magento\Backend\Block\Widget\Form\Element\Dependence;
use Magento\Backend\Block\Widget\Form\Generic;
use Hust\Service\Model\ServiceRegistry;
use Hust\Service\Helper\Data;
use Hust\Service\Model\Source\BookingStatus;

class Setting extends Generic
{
    protected $serviceRegistry;
    protected $helper;
    protected $bookingStatus;

    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Framework\Registry $registry,
        \Magento\Framework\Data\FormFactory $formFactory,
        ServiceRegistry $serviceRegistry,
        Data $helper,
        BookingStatus $bookingStatus,
        array $data = []
    )
    {
        $this->bookingStatus = $bookingStatus;
        $this->helper = $helper;
        $this->serviceRegistry = $serviceRegistry;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    protected function _prepareLayout()
    {
//        $form = $this->_formFactory->create(
//            [
//                'data' => [
//                    'id' => 'edit_form',
//                    'action' => $this->getUrl('*/*/save', ['booking_id' => $this->getRequest()->getParam('id')]),
//                    'method' => 'post',
//                    'enctype' => 'multipart/form-data'
//                ]
//            ]
//        );
        $form = $this->_formFactory->create();
        $bookingCurrent = $this->serviceRegistry->registry('booking_current');
        $fieldGeneralInformation = $form->addFieldset(
            'setting_form',
            [
                'legend' => __('Setting')
            ]
        );



        $fieldGeneralInformation->addField(
            'booking_status',
            'select',
            [
                'label' => __('Status'),
                'name' => 'booking_status',
                'required' => true,
                'value' => $bookingCurrent->getBookingStatus() ,
                'values' => $this->bookingStatus->toArray(),

            ]
        );

        $fieldGeneralInformation->addField(
            'employee_id',
            'select',
            [
                'label' => __('Employee'),
                'name' => 'employee_id',
                'value' => $this->helper->getEmployeeOfBooking($bookingCurrent->getBookingId()) ?? '' ,
                'values' => $this->helper->getListEmployeeAvailable(
                    $bookingCurrent->getLocatorId(),
                    $bookingCurrent->getServiceId(),
                    $bookingCurrent->getBookingHour(),
                    $bookingCurrent->getDate()
                ),
                'display' => 'none'
            ]
        );



        $fieldGeneralInformation->addField(
            'reason',
            'textarea',
            [
                'label' => __('Reason'),
                'name' => 'reason',
                'value' => $bookingCurrent->getReason(),
                'display' => 'none'
            ]
        );
        $htmlIdPrefix = 'booking_setting_';

//        $this->setChild(
//            'form_after',
//            $this->getLayout()->createBlock(Dependence::class)
//                ->addFieldMap("{$htmlIdPrefix}booking_status", 'booking_status')
//                ->addFieldMap("{$htmlIdPrefix}employee_id", 'employee_id')
//                ->addFieldMap("{$htmlIdPrefix}reason", 'reason')
//                ->addFieldDependence('employee_id', 'booking_status', '1')
//                ->addFieldDependence('reason', 'booking_status', '2')
//                ->addFieldDependence('reason', 'booking_status', '4')
//
//        );

//        $form->setUseContainer(true);
        $this->setForm($form);
        return parent::_prepareLayout(); // TODO: Change the autogenerated stub
    }

}
